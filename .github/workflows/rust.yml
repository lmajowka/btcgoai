name: Rust

on:
  push:
    branches: [ "main", "feature/*" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "v0-rust"
    
    - name: System info (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        system_profiler SPSoftwareDataType SPHardwareDataType
        uname -a
    
    - name: Check Rust version
      run: |
        rustc --version
        cargo --version
    
    - name: Build (debug, faster compile time)
      run: cargo build -j 1
      
    - name: Build release binary
      run: cargo build --release -j 1
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: btcrustai-${{ matrix.os }}
        path: |
          target/release/btcrustai${{ runner.os == 'Windows' && '.exe' || '' }}
        if-no-files-found: ignore 